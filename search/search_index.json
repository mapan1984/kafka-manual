{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"kafka \u4f7f\u7528\u624b\u518c","title":"\u4ecb\u7ecd"},{"location":"#kafka","text":"","title":"kafka \u4f7f\u7528\u624b\u518c"},{"location":"kafka/","text":"kafka \u64cd\u4f5c","title":"Kafka-manual"},{"location":"kafka/#kafka","text":"","title":"kafka \u64cd\u4f5c"},{"location":"kafka/2019-10-20-kafka-config/","text":"kafka \u5e38\u7528\u914d\u7f6e\u53c2\u6570 JVM \u4f7f\u7528 G1 \u5783\u573e\u56de\u6536\u5668 -XX:+UseG1GC \u5806\u5185\u5b58 KAFKA_HEAP_OPTS='-Xmx16G -Xms16G' # \u5927\u5c0f\u4e3a\u4e3b\u673a\u5185\u5b58\u7684 50% Broker \u53c2\u6570\u914d\u7f6e \u7f51\u7edc\u548cios\u64cd\u4f5c\u7ebf\u7a0b\u914d\u7f6e num.network.threads=9 broker\u5904\u7406\u6d88\u606f\u7684\u6700\u5927\u7ebf\u7a0b\u6570(\u4e3b\u8981\u5904\u7406\u7f51\u7edcio\uff0c\u8bfb\u5199\u7f13\u51b2\u533a\u6570\u636e\uff0c\u57fa\u672c\u6ca1\u6709io\u7b49\u5f85\uff0c\u914d\u7f6e\u7ebf\u7a0b\u6570\u91cf\u4e3acpu\u6838\u6570\u52a01) num.io.threads=16 broker\u5904\u7406\u78c1\u76d8IO\u7684\u7ebf\u7a0b\u6570(\u5904\u7406\u78c1\u76d8io\u64cd\u4f5c\uff0c\u9ad8\u5cf0\u671f\u53ef\u80fd\u6709\u4e9bio\u7b49\u5f85\uff0c\u56e0\u6b64\u914d\u7f6e\u9700\u8981\u5927\u4e9b\u3002\u914d\u7f6e\u7ebf\u7a0b\u6570\u91cf\u4e3acpu\u6838\u65702\u500d\uff0c\u6700\u5927\u4e0d\u8d85\u8fc73\u500d) socket.request.max.bytes=2147483600 socket server\u53ef\u63a5\u53d7\u6570\u636e\u5927\u5c0f(\u9632\u6b62OOM\u5f02\u5e38)\uff0c\u6839\u636e\u81ea\u5df1\u4e1a\u52a1\u6570\u636e\u5305\u7684\u5927\u5c0f\u9002\u5f53\u8c03\u5927\u3002\u8fd9\u91cc\u53d6\u503c\u662fint\u7c7b\u578b\u7684\uff0c\u800c\u53d7\u9650\u4e8ejava int\u7c7b\u578b\u7684\u53d6\u503c\u8303\u56f4 java int\u7684\u53d6\u503c\u8303\u56f4\u4e3a\uff08-2147483648~2147483647\uff09 log \u6570\u636e\u6587\u4ef6\u5237\u76d8\u7b56\u7565 # \u6bcf\u5f53producer\u5199\u516510000\u6761\u6d88\u606f\u65f6\uff0c\u5237\u6570\u636e\u5230\u78c1\u76d8 log.flush.interval.messages=10000 # \u6bcf\u95f4\u96941\u79d2\u949f\u65f6\u95f4\uff0c\u5237\u6570\u636e\u5230\u78c1\u76d8 log.flush.interval.ms=1000 \u4e3a\u4e86\u5927\u5e45\u5ea6\u63d0\u9ad8producer\u5199\u5165\u541e\u5410\u91cf\uff0c\u9700\u8981\u5b9a\u671f\u6279\u91cf\u5199\u6587\u4ef6\u3002\u4e00\u822c\u65e0\u9700\u6539\u52a8\uff0c\u5982\u679ctopic\u7684\u6570\u636e\u91cf\u8f83\u5c0f\u53ef\u4ee5\u8003\u8651\u51cf\u5c11 log.flush.interval.ms \u548c log.flush.interval.messages \u6765\u5f3a\u5236\u5237\u5199\u6570\u636e\uff0c\u51cf\u5c11\u53ef\u80fd\u7531\u4e8e\u7f13\u5b58\u6570\u636e\u672a\u5199\u76d8\u5e26\u6765\u7684\u4e0d\u4e00\u81f4\u3002\u63a8\u8350\u914d\u7f6e\u5206\u522bmessage 10000\uff0c\u95f4\u96941s\u3002 Kafka\u5b98\u65b9\u5e76\u4e0d\u5efa\u8bae\u901a\u8fc7Broker\u7aef\u7684log.flush.interval.messages\u548clog.flush.interval.ms\u6765\u5f3a\u5236\u5199\u76d8\uff0c\u8ba4\u4e3a\u6570\u636e\u7684\u53ef\u9760\u6027\u5e94\u8be5\u901a\u8fc7Replica\u6765\u4fdd\u8bc1\uff0c\u800c\u5f3a\u5236Flush\u6570\u636e\u5230\u78c1\u76d8\u4f1a\u5bf9\u6574\u4f53\u6027\u80fd\u4ea7\u751f\u5f71\u54cd\u3002 \u65e5\u5fd7\u4fdd\u7559\u7b56\u7565\u914d\u7f6e # \u65e5\u5fd7\u4fdd\u7559\u65f6\u957f log.retention.hours=72 \u65e5\u5fd7\u5efa\u8bae\u4fdd\u7559\u4e09\u5929\uff0c\u4e5f\u53ef\u4ee5\u66f4\u77ed # \u6bb5\u6587\u4ef6\u5927\u5c0f log.segment.bytes=1073741824 \u6bb5\u6587\u4ef6\u914d\u7f6e1GB\uff0c\u6709\u5229\u4e8e\u5feb\u901f\u56de\u6536\u78c1\u76d8\u7a7a\u95f4\uff0c\u91cd\u542fkafka\u52a0\u8f7d\u4e5f\u4f1a\u52a0\u5feb\u3002 kafka\u542f\u52a8\u65f6\u662f\u5355\u7ebf\u7a0b\u626b\u63cf\u76ee\u5f55(log.dir)\u4e0b\u6240\u6709\u6570\u636e\u6587\u4ef6\uff0c\u5982\u679c\u6bb5\u6587\u4ef6\u8fc7\u5c0f\uff0c\u5219\u6587\u4ef6\u6570\u91cf\u6bd4\u8f83\u591a replica\u590d\u5236\u914d\u7f6e # \u62c9\u53d6\u7ebf\u7a0b\u6570\uff1afetchers \u914d\u7f6e\u591a\u53ef\u4ee5\u63d0\u9ad8follower\u7684I/O\u5e76\u53d1\u5ea6\uff0c\u5355\u4f4d\u65f6\u95f4\u5185leader\u6301\u6709\u66f4\u591a\u8bf7\u6c42\uff0c\u76f8\u5e94\u8d1f\u8f7d\u4f1a\u589e\u5927\uff0c\u9700\u8981\u6839\u636e\u673a\u5668\u786c\u4ef6\u8d44\u6e90\u505a\u6743\u8861\uff0c\u5efa\u8bae\u9002\u5f53\u8c03\u5927\uff1b num.replica.fetchers=3 # \u62c9\u53d6\u6d88\u606f\u6700\u5c0f\u5b57\u8282\uff1a\u4e00\u822c\u65e0\u9700\u66f4\u6539\uff0c\u9ed8\u8ba4\u503c\u5373\u53ef\uff1b replica.fetch.min.bytes=1 # \u62c9\u53d6\u6d88\u606f\u6700\u5927\u5b57\u8282\uff1a\u9ed8\u8ba4\u4e3a1MB\uff0c\u6839\u636e\u4e1a\u52a1\u60c5\u51b5\u8c03\u6574 replica.fetch.max.bytes=5242880 # \u62c9\u53d6\u6d88\u606f\u7b49\u5f85\u65f6\u95f4\uff1a\u51b3\u5b9a follower \u7684\u62c9\u53d6\u9891\u7387\uff0c\u9891\u7387\u8fc7\u9ad8\uff0cleader\u4f1a\u79ef\u538b\u5927\u91cf\u65e0\u6548\u8bf7\u6c42\u60c5\u51b5\uff0c\u65e0\u6cd5\u8fdb\u884c\u6570\u636e\u540c\u6b65\uff0c\u5bfc\u81f4cpu\u98d9\u5347\u3002\u914d\u7f6e\u65f6\u8c28\u614e\u4f7f\u7528\uff0c\u5efa\u8bae\u9ed8\u8ba4\u503c\uff0c\u65e0\u9700\u914d\u7f6e\u3002 replica.fetch.wait.max.ms \u5206\u533a\u6570\u91cf\u914d\u7f6e num.partitions=1 \u9ed8\u8ba4 partition \u6570\u91cf 1\uff0c\u5982\u679ctopic\u5728\u521b\u5efa\u65f6\u6ca1\u6709\u6307\u5b9apartition\u6570\u91cf\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6b64\u503c\u3002Partition\u7684\u6570\u91cf\u9009\u53d6\u4e5f\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230Kafka\u96c6\u7fa4\u7684\u541e\u5410\u6027\u80fd\uff0c\u914d\u7f6e\u8fc7\u5c0f\u4f1a\u5f71\u54cd\u6d88\u8d39\u6027\u80fd\u3002 replica \u6570\u914d\u7f6e default.replication.factor=1 \u8fd9\u4e2a\u53c2\u6570\u6307\u65b0\u521b\u5efa\u4e00\u4e2atopic\u65f6\uff0c\u9ed8\u8ba4\u7684Replica\u6570\u91cf\uff0cReplica\u8fc7\u5c11\u4f1a\u5f71\u54cd\u6570\u636e\u7684\u53ef\u7528\u6027\uff0c\u592a\u591a\u5219\u4f1a\u767d\u767d\u6d6a\u8d39\u5b58\u50a8\u8d44\u6e90\uff0c\u4e00\u822c\u5efa\u8bae\u57282~3\u4e3a\u5b9c\u3002 replica lag replica.lag.time.max.ms=10000 replica.lag.max.messages=4000 auto rebalance auto.leader.rebalance.enable=true leader.imbalance.check.interval.seconds=300 leader.imbalance.per.broker.percentage=10 offset retention offsets.retention.check.interval.ms = 600000 offsets.retention.minutes = 1440 \u751f\u4ea7\u8005\u53c2\u6570\u914d\u7f6e # \u5185\u5b58\u7f13\u51b2\u5927\u5c0f\uff0c\u5355\u4f4d byte buffer.memory=33554432 \u5728 Producer \u7aef\u7528\u6765\u5b58\u653e\u5c1a\u672a\u53d1\u9001\u51fa\u53bb\u7684 Message \u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u9ed8\u8ba4 32MB\u3002\u5185\u5b58\u7f13\u51b2\u533a\u5185\u7684\u6d88\u606f\u4ee5\u4e00\u4e2a\u4e2a batch \u7684\u5f62\u5f0f\u7ec4\u7ec7\uff0c\u6bcf\u4e2a batch \u5185\u5305\u542b\u591a\u6761\u6d88\u606f\uff0cProducer \u4f1a\u628a\u591a\u4e2a batch \u6253\u5305\u6210\u4e00\u4e2a request \u53d1\u9001\u5230 kafka \u670d\u52a1\u5668\u4e0a\u3002\u5185\u5b58\u7f13\u51b2\u533a\u6ee1\u4e86\u4e4b\u540e\u53ef\u4ee5\u9009\u62e9\u963b\u585e\u53d1\u9001\u6216\u629b\u51fa\u5f02\u5e38\uff0c\u7531 block.on.buffer.full \u7684\u914d\u7f6e\u6765\u51b3\u5b9a\u3002 * \u5982\u679c\u9009\u62e9\u963b\u585e\uff0c\u5728\u6d88\u606f\u6301\u7eed\u53d1\u9001\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u7f13\u51b2\u533a\u88ab\u586b\u6ee1\u540e\uff0cproducer\u7acb\u5373\u8fdb\u5165\u963b\u585e\u72b6\u6001\u76f4\u5230\u7a7a\u95f2\u5185\u5b58\u88ab\u91ca\u653e\u51fa\u6765\uff0c\u8fd9\u6bb5\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7 max.block.ms \u8bbe\u7f6e\u7684\u503c\uff0c\u4e00\u65e6\u8d85\u8fc7\uff0cproducer\u5219\u4f1a\u629b\u51fa TimeoutException \u5f02\u5e38\uff0c\u56e0\u4e3aProducer\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u82e5\u4e00\u76f4\u62a5TimeoutException\uff0c\u9700\u8981\u8003\u8651\u8c03\u9ad8buffer.memory \u4e86\u3002 batch.size=16384 Producer\u4f1a\u628a\u53d1\u5f80\u540c\u4e00\u4e2a topic partition \u7684\u591a\u4e2a\u6d88\u606f\u8fdb\u884c\u5408\u5e76\uff0c batch.size \u6307\u660e\u4e86\u5408\u5e76\u540e batch \u5927\u5c0f\u7684\u4e0a\u9650\u3002\u5982\u679c\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u7684\u592a\u5c0f\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6240\u6709\u7684Request\u90fd\u4e0d\u8fdb\u884cBatch\u3002 linger.ms=0 producer \u5408\u5e76\u7684\u6d88\u606f\u7684\u5927\u5c0f\u672a\u8fbe\u5230 batch.size \uff0c\u4f46\u5982\u679c\u5b58\u5728\u65f6\u95f4\u8fbe\u5230 linger.ms \uff0c\u4e5f\u4f1a\u8fdb\u884c\u53d1\u9001\u3002 # \u6700\u5927\u8bf7\u6c42\u5927\u5c0f max.request.size \u51b3\u5b9a\u4e86\u6bcf\u6b21\u53d1\u9001\u7ed9Kafka\u670d\u52a1\u5668\u8bf7\u6c42\u7684\u6700\u5927\u5927\u5c0f\uff0c\u540c\u65f6\u4e5f\u4f1a\u9650\u5236\u4f60\u4e00\u6761\u6d88\u606f\u7684\u6700\u5927\u5927\u5c0f\u4e5f\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u53c2\u6570\u8bbe\u7f6e\u7684\u503c\uff0c\u8fd9\u4e2a\u5176\u5b9e\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u6d88\u606f\u7684\u5927\u5c0f\u6765\u7075\u6d3b\u7684\u8c03\u6574 # \u53d1\u9001\u5931\u8d25\u91cd\u8bd5\u6b21\u6570 retries # \u6bcf\u6b21\u91cd\u8bd5\u95f4\u9694\u65f6\u95f4 retries.backoff.ms # \u538b\u7f29\u7c7b\u578b compression.type=none \u9ed8\u8ba4\u53d1\u9001\u4e0d\u8fdb\u884c\u538b\u7f29\uff0c\u63a8\u8350\u914d\u7f6e\u4e00\u79cd\u9002\u5408\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5927\u5e45\u5ea6\u7684\u51cf\u7f13\u7f51\u7edc\u538b\u529b\u548cBroker\u7684\u5b58\u50a8\u538b\u529b\u3002 acks=1 \u8fd9\u4e2a\u914d\u7f6e\u53ef\u4ee5\u8bbe\u5b9a\u53d1\u9001\u6d88\u606f\u540e\u662f\u5426\u9700\u8981Broker\u7aef\u8fd4\u56de\u786e\u8ba4\uff0c\u8bbe\u7f6e\u65f6\u9700\u8981\u6743\u8861\u6570\u636e\u53ef\u9760\u6027\u548c\u541e\u5410\u91cf\u3002 acks : * 0\uff1a\u8868\u793a producer \u8bf7\u6c42\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u9700\u8981\u7b49\u5f85 leader \u7684\u4efb\u4f55\u786e\u8ba4 * -1\uff1a\u8868\u793a\u5206\u533a leader \u5fc5\u987b\u7b49\u5f85\u6d88\u606f\u88ab\u6210\u529f\u5199\u5165\u5230\u6240\u6709\u7684 ISR \u526f\u672c\u4e2d\u624d\u8ba4\u4e3a producer \u6210\u529f * 1\uff1a\u8868\u793a leader \u526f\u672c\u5fc5\u987b\u5e94\u7b54\u6b64 producer \u8bf7\u6c42\u5e76\u5199\u5165\u6d88\u606f\u5230\u672c\u5730\u65e5\u5fd7\uff0c\u4e4b\u540e producer \u8bf7\u6c42\u88ab\u8ba4\u4e3a\u6210\u529f \u751f\u4ea7\u8005\u4e0d\u4e22\u5931\u6570\u636e\u4fdd\u8bc1 block.on.buffer.full = true \u751f\u4ea7\u8005\u6d88\u606f\u5728\u5b9e\u9645\u53d1\u9001\u4e4b\u524d\u662f\u4fdd\u7559\u5728 buffer \u4e2d\uff0cbuffer \u6ee1\u4e4b\u540e\u751f\u4ea7\u7b49\u5f85\uff0c\u800c\u4e0d\u662f\u629b\u51fa\u5f02\u5e38 acks=all \u6240\u6709 follower \u90fd\u54cd\u5e94\u540e\u624d\u8ba4\u4e3a\u6d88\u606f\u63d0\u4ea4\u6210\u529f\uff08\u9700\u8981\u6ce8\u610f broker \u7684 min.insync.replicas \u53c2\u6570\uff09 retries=Integer.MAX_VALUE \u53d1\u9001\u5931\u8d25\u540e\u6301\u7eed\u91cd\u8bd5\uff08\u5355\u72ec\u8bbe\u7f6e\u8fd9\u4e2a\u53ef\u80fd\u4f1a\u9020\u6210\u6d88\u606f\u91cd\u590d\u53d1\u9001\uff09 max.in.flight.requests.per.connection=1 \u5355\u4e2a\u7ebf\u7a0b\u5728\u5355\u4e2a\u8fde\u63a5\u4e0a\u80fd\u591f\u53d1\u9001\u7684\u672a\u54cd\u5e94\u8bf7\u6c42\u4e2a\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a 1 \u53ef\u4ee5\u907f\u514d\u6d88\u606f\u4e71\u5e8f\uff0c\u540c\u65f6\u53ef\u4ee5\u4fdd\u8bc1\u5728 retry \u662f\u4e0d\u4f1a\u91cd\u590d\u53d1\u9001\u6d88\u606f\uff0c\u4f46\u662f\u4f1a\u964d\u4f4e producer io \u7ebf\u7a0b\u7684\u541e\u5410\u91cf unclean.leader.election.enable=false \u5173\u95ed unclean leader \u9009\u4e3e\uff0c\u5373\u4e0d\u5141\u8bb8\u975e ISR \u4e2d\u7684\u526f\u672c\u88ab\u9009\u4e3e\u4e3a leader \u5e42\u7b49\u6027 enable.idempotence \u5355\u4e2a\u4f1a\u8bdd\uff0c\u5355\u4e2a partition \u5e42\u7b49\u6027\uff0c\u91cd\u590d\u53d1\u9001\u6570\u636e\u65f6 exactly once producer id, sequence number producer id, topic, partition, sequence number \u4e8b\u52a1\u6027 transactional.id \u751f\u4ea7\u8005\u4e8b\u52a1 id Properties props = new Properties(); props.put(\"key.serializer\", \"org.apache.kafka.common.serialization.StringSerializer\"); props.put(\"value.serializer\", \"org.apache.kafka.common.serialization.StringSerializer\"); props.put(\"client.id\", \"ProducerTranscationnalExample\"); props.put(\"bootstrap.servers\", \"localhost:9092\"); props.put(\"transactional.id\", \"test-transactional\"); props.put(\"acks\", \"all\"); KafkaProducer producer = new KafkaProducer(props); producer.initTransactions(); try { String msg = \"matt test\"; producer.beginTransaction(); producer.send(new ProducerRecord(topic, \"0\", msg.toString())); producer.send(new ProducerRecord(topic, \"1\", msg.toString())); producer.send(new ProducerRecord(topic, \"2\", msg.toString())); producer.commitTransaction(); } catch (ProducerFencedException e1) { e1.printStackTrace(); producer.close(); } catch (KafkaException e2) { e2.printStackTrace(); producer.abortTransaction(); } producer.close(); \u8bf7\u6c42 \u6d88\u8d39\u8005\u53c2\u6570\u914d\u7f6e num.consumer.fetchers=1 \u542f\u52a8Consumer\u7684\u4e2a\u6570\uff0c\u9002\u5f53\u589e\u52a0\u53ef\u4ee5\u63d0\u9ad8\u5e76\u53d1\u5ea6\u3002 fetch.min.bytes=1 \u6bcf\u6b21Fetch Request\u81f3\u5c11\u8981\u62ff\u5230\u591a\u5c11\u5b57\u8282\u7684\u6570\u636e\u624d\u53ef\u4ee5\u8fd4\u56de\u3002 fetch.wait.max.ms=100 \u5728Fetch Request\u83b7\u53d6\u7684\u6570\u636e\u81f3\u5c11\u8fbe\u5230 fetch.min.bytes \u4e4b\u524d\uff0c\u5141\u8bb8\u7b49\u5f85\u7684\u6700\u5927\u65f6\u957f\u3002 session.timeout.ms=10000 \u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4\uff0c\u5982\u679c\u53d1\u9001\u5fc3\u8df3\u65f6\u95f4\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\uff0cbroker \u5c31\u4f1a\u8ba4\u4e3a\u6d88\u8d39\u8005\u6389\u7ebf heartbeat.interval.ms=3000 \u53d1\u9001\u5fc3\u8df3\u95f4\u9694\u65f6\u95f4\uff0c\u63a8\u8350\u4e0d\u8981\u9ad8\u4e8e session.timeout.ms \u76841/3 enable.auto.commit \u662f\u5426\u542f\u7528\u81ea\u52a8\u63d0\u4ea4\u3002 auto.commit.interval.ms \u81ea\u52a8\u63d0\u4ea4\u95f4\u9694 max.poll.interval.ms=300000 poll() \u8c03\u7528\u7684\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u8ddd\u79bb\u4e0a\u4e00\u6b21 poll() \u8c03\u7528\u7684\u65f6\u95f4\u8d85\u8fc7 max.poll.interval.ms \uff0c\u6d88\u8d39\u8005\u4f1a\u88ab\u8ba4\u4e3a\u5931\u8d25 max.poll.records=500 \u5355\u6b21 poll() \u8c03\u7528\u53ef\u4ee5\u62c9\u53d6\u7684\u6700\u591a\u6d88\u606f \u652f\u6301\u7684\u6d88\u606f\u5927\u5c0f # producer max.request.size # broker message.max.bytes # replica fetcher # \u4e0d\u662f\u7edd\u5bf9\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u6d88\u606f\u8d85\u8fc7\u8fd9\u4e2a\u8bbe\u5b9a\uff0c\u6700\u5927\u503c\u4ecd\u7531 message.max.bytes, max.message.bytes \u51b3\u5b9a (?) replica.fetch.max.bytes # topic max.message.bytes # consumer fetch.message.max.bytes","title":"2. kafka config"},{"location":"kafka/2019-10-20-kafka-config/#kafka","text":"","title":"kafka \u5e38\u7528\u914d\u7f6e\u53c2\u6570"},{"location":"kafka/2019-10-20-kafka-config/#jvm","text":"","title":"JVM"},{"location":"kafka/2019-10-20-kafka-config/#g1","text":"-XX:+UseG1GC","title":"\u4f7f\u7528 G1 \u5783\u573e\u56de\u6536\u5668"},{"location":"kafka/2019-10-20-kafka-config/#_1","text":"KAFKA_HEAP_OPTS='-Xmx16G -Xms16G' # \u5927\u5c0f\u4e3a\u4e3b\u673a\u5185\u5b58\u7684 50%","title":"\u5806\u5185\u5b58"},{"location":"kafka/2019-10-20-kafka-config/#broker","text":"","title":"Broker \u53c2\u6570\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#ios","text":"num.network.threads=9 broker\u5904\u7406\u6d88\u606f\u7684\u6700\u5927\u7ebf\u7a0b\u6570(\u4e3b\u8981\u5904\u7406\u7f51\u7edcio\uff0c\u8bfb\u5199\u7f13\u51b2\u533a\u6570\u636e\uff0c\u57fa\u672c\u6ca1\u6709io\u7b49\u5f85\uff0c\u914d\u7f6e\u7ebf\u7a0b\u6570\u91cf\u4e3acpu\u6838\u6570\u52a01) num.io.threads=16 broker\u5904\u7406\u78c1\u76d8IO\u7684\u7ebf\u7a0b\u6570(\u5904\u7406\u78c1\u76d8io\u64cd\u4f5c\uff0c\u9ad8\u5cf0\u671f\u53ef\u80fd\u6709\u4e9bio\u7b49\u5f85\uff0c\u56e0\u6b64\u914d\u7f6e\u9700\u8981\u5927\u4e9b\u3002\u914d\u7f6e\u7ebf\u7a0b\u6570\u91cf\u4e3acpu\u6838\u65702\u500d\uff0c\u6700\u5927\u4e0d\u8d85\u8fc73\u500d) socket.request.max.bytes=2147483600 socket server\u53ef\u63a5\u53d7\u6570\u636e\u5927\u5c0f(\u9632\u6b62OOM\u5f02\u5e38)\uff0c\u6839\u636e\u81ea\u5df1\u4e1a\u52a1\u6570\u636e\u5305\u7684\u5927\u5c0f\u9002\u5f53\u8c03\u5927\u3002\u8fd9\u91cc\u53d6\u503c\u662fint\u7c7b\u578b\u7684\uff0c\u800c\u53d7\u9650\u4e8ejava int\u7c7b\u578b\u7684\u53d6\u503c\u8303\u56f4 java int\u7684\u53d6\u503c\u8303\u56f4\u4e3a\uff08-2147483648~2147483647\uff09","title":"\u7f51\u7edc\u548cios\u64cd\u4f5c\u7ebf\u7a0b\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#log","text":"# \u6bcf\u5f53producer\u5199\u516510000\u6761\u6d88\u606f\u65f6\uff0c\u5237\u6570\u636e\u5230\u78c1\u76d8 log.flush.interval.messages=10000 # \u6bcf\u95f4\u96941\u79d2\u949f\u65f6\u95f4\uff0c\u5237\u6570\u636e\u5230\u78c1\u76d8 log.flush.interval.ms=1000 \u4e3a\u4e86\u5927\u5e45\u5ea6\u63d0\u9ad8producer\u5199\u5165\u541e\u5410\u91cf\uff0c\u9700\u8981\u5b9a\u671f\u6279\u91cf\u5199\u6587\u4ef6\u3002\u4e00\u822c\u65e0\u9700\u6539\u52a8\uff0c\u5982\u679ctopic\u7684\u6570\u636e\u91cf\u8f83\u5c0f\u53ef\u4ee5\u8003\u8651\u51cf\u5c11 log.flush.interval.ms \u548c log.flush.interval.messages \u6765\u5f3a\u5236\u5237\u5199\u6570\u636e\uff0c\u51cf\u5c11\u53ef\u80fd\u7531\u4e8e\u7f13\u5b58\u6570\u636e\u672a\u5199\u76d8\u5e26\u6765\u7684\u4e0d\u4e00\u81f4\u3002\u63a8\u8350\u914d\u7f6e\u5206\u522bmessage 10000\uff0c\u95f4\u96941s\u3002 Kafka\u5b98\u65b9\u5e76\u4e0d\u5efa\u8bae\u901a\u8fc7Broker\u7aef\u7684log.flush.interval.messages\u548clog.flush.interval.ms\u6765\u5f3a\u5236\u5199\u76d8\uff0c\u8ba4\u4e3a\u6570\u636e\u7684\u53ef\u9760\u6027\u5e94\u8be5\u901a\u8fc7Replica\u6765\u4fdd\u8bc1\uff0c\u800c\u5f3a\u5236Flush\u6570\u636e\u5230\u78c1\u76d8\u4f1a\u5bf9\u6574\u4f53\u6027\u80fd\u4ea7\u751f\u5f71\u54cd\u3002","title":"log \u6570\u636e\u6587\u4ef6\u5237\u76d8\u7b56\u7565"},{"location":"kafka/2019-10-20-kafka-config/#_2","text":"# \u65e5\u5fd7\u4fdd\u7559\u65f6\u957f log.retention.hours=72 \u65e5\u5fd7\u5efa\u8bae\u4fdd\u7559\u4e09\u5929\uff0c\u4e5f\u53ef\u4ee5\u66f4\u77ed # \u6bb5\u6587\u4ef6\u5927\u5c0f log.segment.bytes=1073741824 \u6bb5\u6587\u4ef6\u914d\u7f6e1GB\uff0c\u6709\u5229\u4e8e\u5feb\u901f\u56de\u6536\u78c1\u76d8\u7a7a\u95f4\uff0c\u91cd\u542fkafka\u52a0\u8f7d\u4e5f\u4f1a\u52a0\u5feb\u3002 kafka\u542f\u52a8\u65f6\u662f\u5355\u7ebf\u7a0b\u626b\u63cf\u76ee\u5f55(log.dir)\u4e0b\u6240\u6709\u6570\u636e\u6587\u4ef6\uff0c\u5982\u679c\u6bb5\u6587\u4ef6\u8fc7\u5c0f\uff0c\u5219\u6587\u4ef6\u6570\u91cf\u6bd4\u8f83\u591a","title":"\u65e5\u5fd7\u4fdd\u7559\u7b56\u7565\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#replica","text":"# \u62c9\u53d6\u7ebf\u7a0b\u6570\uff1afetchers \u914d\u7f6e\u591a\u53ef\u4ee5\u63d0\u9ad8follower\u7684I/O\u5e76\u53d1\u5ea6\uff0c\u5355\u4f4d\u65f6\u95f4\u5185leader\u6301\u6709\u66f4\u591a\u8bf7\u6c42\uff0c\u76f8\u5e94\u8d1f\u8f7d\u4f1a\u589e\u5927\uff0c\u9700\u8981\u6839\u636e\u673a\u5668\u786c\u4ef6\u8d44\u6e90\u505a\u6743\u8861\uff0c\u5efa\u8bae\u9002\u5f53\u8c03\u5927\uff1b num.replica.fetchers=3 # \u62c9\u53d6\u6d88\u606f\u6700\u5c0f\u5b57\u8282\uff1a\u4e00\u822c\u65e0\u9700\u66f4\u6539\uff0c\u9ed8\u8ba4\u503c\u5373\u53ef\uff1b replica.fetch.min.bytes=1 # \u62c9\u53d6\u6d88\u606f\u6700\u5927\u5b57\u8282\uff1a\u9ed8\u8ba4\u4e3a1MB\uff0c\u6839\u636e\u4e1a\u52a1\u60c5\u51b5\u8c03\u6574 replica.fetch.max.bytes=5242880 # \u62c9\u53d6\u6d88\u606f\u7b49\u5f85\u65f6\u95f4\uff1a\u51b3\u5b9a follower \u7684\u62c9\u53d6\u9891\u7387\uff0c\u9891\u7387\u8fc7\u9ad8\uff0cleader\u4f1a\u79ef\u538b\u5927\u91cf\u65e0\u6548\u8bf7\u6c42\u60c5\u51b5\uff0c\u65e0\u6cd5\u8fdb\u884c\u6570\u636e\u540c\u6b65\uff0c\u5bfc\u81f4cpu\u98d9\u5347\u3002\u914d\u7f6e\u65f6\u8c28\u614e\u4f7f\u7528\uff0c\u5efa\u8bae\u9ed8\u8ba4\u503c\uff0c\u65e0\u9700\u914d\u7f6e\u3002 replica.fetch.wait.max.ms","title":"replica\u590d\u5236\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#_3","text":"num.partitions=1 \u9ed8\u8ba4 partition \u6570\u91cf 1\uff0c\u5982\u679ctopic\u5728\u521b\u5efa\u65f6\u6ca1\u6709\u6307\u5b9apartition\u6570\u91cf\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6b64\u503c\u3002Partition\u7684\u6570\u91cf\u9009\u53d6\u4e5f\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230Kafka\u96c6\u7fa4\u7684\u541e\u5410\u6027\u80fd\uff0c\u914d\u7f6e\u8fc7\u5c0f\u4f1a\u5f71\u54cd\u6d88\u8d39\u6027\u80fd\u3002","title":"\u5206\u533a\u6570\u91cf\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#replica_1","text":"default.replication.factor=1 \u8fd9\u4e2a\u53c2\u6570\u6307\u65b0\u521b\u5efa\u4e00\u4e2atopic\u65f6\uff0c\u9ed8\u8ba4\u7684Replica\u6570\u91cf\uff0cReplica\u8fc7\u5c11\u4f1a\u5f71\u54cd\u6570\u636e\u7684\u53ef\u7528\u6027\uff0c\u592a\u591a\u5219\u4f1a\u767d\u767d\u6d6a\u8d39\u5b58\u50a8\u8d44\u6e90\uff0c\u4e00\u822c\u5efa\u8bae\u57282~3\u4e3a\u5b9c\u3002","title":"replica \u6570\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#replica-lag","text":"replica.lag.time.max.ms=10000 replica.lag.max.messages=4000","title":"replica lag"},{"location":"kafka/2019-10-20-kafka-config/#auto-rebalance","text":"auto.leader.rebalance.enable=true leader.imbalance.check.interval.seconds=300 leader.imbalance.per.broker.percentage=10","title":"auto rebalance"},{"location":"kafka/2019-10-20-kafka-config/#offset-retention","text":"offsets.retention.check.interval.ms = 600000 offsets.retention.minutes = 1440","title":"offset retention"},{"location":"kafka/2019-10-20-kafka-config/#_4","text":"# \u5185\u5b58\u7f13\u51b2\u5927\u5c0f\uff0c\u5355\u4f4d byte buffer.memory=33554432 \u5728 Producer \u7aef\u7528\u6765\u5b58\u653e\u5c1a\u672a\u53d1\u9001\u51fa\u53bb\u7684 Message \u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u9ed8\u8ba4 32MB\u3002\u5185\u5b58\u7f13\u51b2\u533a\u5185\u7684\u6d88\u606f\u4ee5\u4e00\u4e2a\u4e2a batch \u7684\u5f62\u5f0f\u7ec4\u7ec7\uff0c\u6bcf\u4e2a batch \u5185\u5305\u542b\u591a\u6761\u6d88\u606f\uff0cProducer \u4f1a\u628a\u591a\u4e2a batch \u6253\u5305\u6210\u4e00\u4e2a request \u53d1\u9001\u5230 kafka \u670d\u52a1\u5668\u4e0a\u3002\u5185\u5b58\u7f13\u51b2\u533a\u6ee1\u4e86\u4e4b\u540e\u53ef\u4ee5\u9009\u62e9\u963b\u585e\u53d1\u9001\u6216\u629b\u51fa\u5f02\u5e38\uff0c\u7531 block.on.buffer.full \u7684\u914d\u7f6e\u6765\u51b3\u5b9a\u3002 * \u5982\u679c\u9009\u62e9\u963b\u585e\uff0c\u5728\u6d88\u606f\u6301\u7eed\u53d1\u9001\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u7f13\u51b2\u533a\u88ab\u586b\u6ee1\u540e\uff0cproducer\u7acb\u5373\u8fdb\u5165\u963b\u585e\u72b6\u6001\u76f4\u5230\u7a7a\u95f2\u5185\u5b58\u88ab\u91ca\u653e\u51fa\u6765\uff0c\u8fd9\u6bb5\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7 max.block.ms \u8bbe\u7f6e\u7684\u503c\uff0c\u4e00\u65e6\u8d85\u8fc7\uff0cproducer\u5219\u4f1a\u629b\u51fa TimeoutException \u5f02\u5e38\uff0c\u56e0\u4e3aProducer\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u82e5\u4e00\u76f4\u62a5TimeoutException\uff0c\u9700\u8981\u8003\u8651\u8c03\u9ad8buffer.memory \u4e86\u3002 batch.size=16384 Producer\u4f1a\u628a\u53d1\u5f80\u540c\u4e00\u4e2a topic partition \u7684\u591a\u4e2a\u6d88\u606f\u8fdb\u884c\u5408\u5e76\uff0c batch.size \u6307\u660e\u4e86\u5408\u5e76\u540e batch \u5927\u5c0f\u7684\u4e0a\u9650\u3002\u5982\u679c\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u7684\u592a\u5c0f\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6240\u6709\u7684Request\u90fd\u4e0d\u8fdb\u884cBatch\u3002 linger.ms=0 producer \u5408\u5e76\u7684\u6d88\u606f\u7684\u5927\u5c0f\u672a\u8fbe\u5230 batch.size \uff0c\u4f46\u5982\u679c\u5b58\u5728\u65f6\u95f4\u8fbe\u5230 linger.ms \uff0c\u4e5f\u4f1a\u8fdb\u884c\u53d1\u9001\u3002 # \u6700\u5927\u8bf7\u6c42\u5927\u5c0f max.request.size \u51b3\u5b9a\u4e86\u6bcf\u6b21\u53d1\u9001\u7ed9Kafka\u670d\u52a1\u5668\u8bf7\u6c42\u7684\u6700\u5927\u5927\u5c0f\uff0c\u540c\u65f6\u4e5f\u4f1a\u9650\u5236\u4f60\u4e00\u6761\u6d88\u606f\u7684\u6700\u5927\u5927\u5c0f\u4e5f\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u53c2\u6570\u8bbe\u7f6e\u7684\u503c\uff0c\u8fd9\u4e2a\u5176\u5b9e\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u6d88\u606f\u7684\u5927\u5c0f\u6765\u7075\u6d3b\u7684\u8c03\u6574 # \u53d1\u9001\u5931\u8d25\u91cd\u8bd5\u6b21\u6570 retries # \u6bcf\u6b21\u91cd\u8bd5\u95f4\u9694\u65f6\u95f4 retries.backoff.ms # \u538b\u7f29\u7c7b\u578b compression.type=none \u9ed8\u8ba4\u53d1\u9001\u4e0d\u8fdb\u884c\u538b\u7f29\uff0c\u63a8\u8350\u914d\u7f6e\u4e00\u79cd\u9002\u5408\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5927\u5e45\u5ea6\u7684\u51cf\u7f13\u7f51\u7edc\u538b\u529b\u548cBroker\u7684\u5b58\u50a8\u538b\u529b\u3002 acks=1 \u8fd9\u4e2a\u914d\u7f6e\u53ef\u4ee5\u8bbe\u5b9a\u53d1\u9001\u6d88\u606f\u540e\u662f\u5426\u9700\u8981Broker\u7aef\u8fd4\u56de\u786e\u8ba4\uff0c\u8bbe\u7f6e\u65f6\u9700\u8981\u6743\u8861\u6570\u636e\u53ef\u9760\u6027\u548c\u541e\u5410\u91cf\u3002 acks : * 0\uff1a\u8868\u793a producer \u8bf7\u6c42\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u9700\u8981\u7b49\u5f85 leader \u7684\u4efb\u4f55\u786e\u8ba4 * -1\uff1a\u8868\u793a\u5206\u533a leader \u5fc5\u987b\u7b49\u5f85\u6d88\u606f\u88ab\u6210\u529f\u5199\u5165\u5230\u6240\u6709\u7684 ISR \u526f\u672c\u4e2d\u624d\u8ba4\u4e3a producer \u6210\u529f * 1\uff1a\u8868\u793a leader \u526f\u672c\u5fc5\u987b\u5e94\u7b54\u6b64 producer \u8bf7\u6c42\u5e76\u5199\u5165\u6d88\u606f\u5230\u672c\u5730\u65e5\u5fd7\uff0c\u4e4b\u540e producer \u8bf7\u6c42\u88ab\u8ba4\u4e3a\u6210\u529f","title":"\u751f\u4ea7\u8005\u53c2\u6570\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#_5","text":"block.on.buffer.full = true \u751f\u4ea7\u8005\u6d88\u606f\u5728\u5b9e\u9645\u53d1\u9001\u4e4b\u524d\u662f\u4fdd\u7559\u5728 buffer \u4e2d\uff0cbuffer \u6ee1\u4e4b\u540e\u751f\u4ea7\u7b49\u5f85\uff0c\u800c\u4e0d\u662f\u629b\u51fa\u5f02\u5e38 acks=all \u6240\u6709 follower \u90fd\u54cd\u5e94\u540e\u624d\u8ba4\u4e3a\u6d88\u606f\u63d0\u4ea4\u6210\u529f\uff08\u9700\u8981\u6ce8\u610f broker \u7684 min.insync.replicas \u53c2\u6570\uff09 retries=Integer.MAX_VALUE \u53d1\u9001\u5931\u8d25\u540e\u6301\u7eed\u91cd\u8bd5\uff08\u5355\u72ec\u8bbe\u7f6e\u8fd9\u4e2a\u53ef\u80fd\u4f1a\u9020\u6210\u6d88\u606f\u91cd\u590d\u53d1\u9001\uff09 max.in.flight.requests.per.connection=1 \u5355\u4e2a\u7ebf\u7a0b\u5728\u5355\u4e2a\u8fde\u63a5\u4e0a\u80fd\u591f\u53d1\u9001\u7684\u672a\u54cd\u5e94\u8bf7\u6c42\u4e2a\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a 1 \u53ef\u4ee5\u907f\u514d\u6d88\u606f\u4e71\u5e8f\uff0c\u540c\u65f6\u53ef\u4ee5\u4fdd\u8bc1\u5728 retry \u662f\u4e0d\u4f1a\u91cd\u590d\u53d1\u9001\u6d88\u606f\uff0c\u4f46\u662f\u4f1a\u964d\u4f4e producer io \u7ebf\u7a0b\u7684\u541e\u5410\u91cf unclean.leader.election.enable=false \u5173\u95ed unclean leader \u9009\u4e3e\uff0c\u5373\u4e0d\u5141\u8bb8\u975e ISR \u4e2d\u7684\u526f\u672c\u88ab\u9009\u4e3e\u4e3a leader","title":"\u751f\u4ea7\u8005\u4e0d\u4e22\u5931\u6570\u636e\u4fdd\u8bc1"},{"location":"kafka/2019-10-20-kafka-config/#_6","text":"enable.idempotence \u5355\u4e2a\u4f1a\u8bdd\uff0c\u5355\u4e2a partition \u5e42\u7b49\u6027\uff0c\u91cd\u590d\u53d1\u9001\u6570\u636e\u65f6 exactly once producer id, sequence number producer id, topic, partition, sequence number","title":"\u5e42\u7b49\u6027"},{"location":"kafka/2019-10-20-kafka-config/#_7","text":"transactional.id \u751f\u4ea7\u8005\u4e8b\u52a1 id Properties props = new Properties(); props.put(\"key.serializer\", \"org.apache.kafka.common.serialization.StringSerializer\"); props.put(\"value.serializer\", \"org.apache.kafka.common.serialization.StringSerializer\"); props.put(\"client.id\", \"ProducerTranscationnalExample\"); props.put(\"bootstrap.servers\", \"localhost:9092\"); props.put(\"transactional.id\", \"test-transactional\"); props.put(\"acks\", \"all\"); KafkaProducer producer = new KafkaProducer(props); producer.initTransactions(); try { String msg = \"matt test\"; producer.beginTransaction(); producer.send(new ProducerRecord(topic, \"0\", msg.toString())); producer.send(new ProducerRecord(topic, \"1\", msg.toString())); producer.send(new ProducerRecord(topic, \"2\", msg.toString())); producer.commitTransaction(); } catch (ProducerFencedException e1) { e1.printStackTrace(); producer.close(); } catch (KafkaException e2) { e2.printStackTrace(); producer.abortTransaction(); } producer.close();","title":"\u4e8b\u52a1\u6027"},{"location":"kafka/2019-10-20-kafka-config/#_8","text":"","title":"\u8bf7\u6c42"},{"location":"kafka/2019-10-20-kafka-config/#_9","text":"num.consumer.fetchers=1 \u542f\u52a8Consumer\u7684\u4e2a\u6570\uff0c\u9002\u5f53\u589e\u52a0\u53ef\u4ee5\u63d0\u9ad8\u5e76\u53d1\u5ea6\u3002 fetch.min.bytes=1 \u6bcf\u6b21Fetch Request\u81f3\u5c11\u8981\u62ff\u5230\u591a\u5c11\u5b57\u8282\u7684\u6570\u636e\u624d\u53ef\u4ee5\u8fd4\u56de\u3002 fetch.wait.max.ms=100 \u5728Fetch Request\u83b7\u53d6\u7684\u6570\u636e\u81f3\u5c11\u8fbe\u5230 fetch.min.bytes \u4e4b\u524d\uff0c\u5141\u8bb8\u7b49\u5f85\u7684\u6700\u5927\u65f6\u957f\u3002 session.timeout.ms=10000 \u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4\uff0c\u5982\u679c\u53d1\u9001\u5fc3\u8df3\u65f6\u95f4\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\uff0cbroker \u5c31\u4f1a\u8ba4\u4e3a\u6d88\u8d39\u8005\u6389\u7ebf heartbeat.interval.ms=3000 \u53d1\u9001\u5fc3\u8df3\u95f4\u9694\u65f6\u95f4\uff0c\u63a8\u8350\u4e0d\u8981\u9ad8\u4e8e session.timeout.ms \u76841/3 enable.auto.commit \u662f\u5426\u542f\u7528\u81ea\u52a8\u63d0\u4ea4\u3002 auto.commit.interval.ms \u81ea\u52a8\u63d0\u4ea4\u95f4\u9694 max.poll.interval.ms=300000 poll() \u8c03\u7528\u7684\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u8ddd\u79bb\u4e0a\u4e00\u6b21 poll() \u8c03\u7528\u7684\u65f6\u95f4\u8d85\u8fc7 max.poll.interval.ms \uff0c\u6d88\u8d39\u8005\u4f1a\u88ab\u8ba4\u4e3a\u5931\u8d25 max.poll.records=500 \u5355\u6b21 poll() \u8c03\u7528\u53ef\u4ee5\u62c9\u53d6\u7684\u6700\u591a\u6d88\u606f","title":"\u6d88\u8d39\u8005\u53c2\u6570\u914d\u7f6e"},{"location":"kafka/2019-10-20-kafka-config/#_10","text":"# producer max.request.size # broker message.max.bytes # replica fetcher # \u4e0d\u662f\u7edd\u5bf9\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u6d88\u606f\u8d85\u8fc7\u8fd9\u4e2a\u8bbe\u5b9a\uff0c\u6700\u5927\u503c\u4ecd\u7531 message.max.bytes, max.message.bytes \u51b3\u5b9a (?) replica.fetch.max.bytes # topic max.message.bytes # consumer fetch.message.max.bytes","title":"\u652f\u6301\u7684\u6d88\u606f\u5927\u5c0f"},{"location":"kafka/2020-04-01-kafka-tips/","text":"kafka \u547d\u4ee4\u884c\u64cd\u4f5c \u9884\u8bbe\u73af\u5883\u53d8\u91cf \u9884\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u65b9\u4fbf\u64cd\u4f5c\uff1a export KAFKA_HOME=/usr/local/kafka export PATH=\"$PATH:${KAFKA_HOME}/bin\" # zk \u8fde\u63a5\u5730\u5740 export ZK_CONNECT=\"$(hostname):2181\" # kafka \u8fde\u63a5\u5730\u5740 export BOOTSTRAP_SERVER=\"$(hostname):9092\" # \u5982\u679c\u6709 jaas \u8ba4\u8bc1 export KAFKA_OPTS=\"-Djava.security.auth.login.config=${KAFKA_HOME}/config/kafka_server_jaas.conf\" export JMX_PORT=9997 \u57fa\u672c\u64cd\u4f5c \u521b\u5efa topic $ kafka-topics.sh --create --zookeeper ${ZK_CONNECT} --replication-factor 3 --partitions 3 --topic __test \u5220\u9664 topic $ kafka-topics.sh --zookeeper ${ZK_CONNECT} --delete --topic __test \u5217\u51fa topic $ kafka-topics.sh --list --zookeeper ${ZK_CONNECT} \u751f\u4ea7 \u6d88\u606f $ kafka-console-producer.sh --broker-list ${BOOTSTRAP_SERVER} --topic __test \u6d88\u8d39 \u6d88\u606f $ kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --topic __test --from-beginning \u63cf\u8ff0 topic $ kafka-topics.sh --describe --zookeeper ${ZK_CONNECT} --topic test \u4fee\u6539 topic \u5206\u533a\u6570 $ kafka-topics.sh --zookeeper ${ZK_CONNECT} --alter --partitions 5 --topic bar \u6d88\u8d39\u8005\u9009\u9879 \u4f7f\u7528 zookeeper \u4fdd\u5b58\u6d88\u8d39\u7ec4\u6570\u636e: --zookeeper localhost:2181 \u4f7f\u7528 __consumer_offsets \u4fdd\u5b58\u6d88\u8d39\u7ec4\u6570\u636e: --bootstrap-server localhost:9092 \u6307\u5b9a topic: --topic foo --whitelist \".*\" \u6307\u5b9a group \u540d: --group group1 --consumer-property group.id=group1 ZK Group kafka-console-consumer.sh --zookeeper ${ZK_CONNECT} --topic test --from-beginning --group test1 kafka-console-consumer.sh --zookeeper ${ZK_CONNECT} --topic logs --consumer-property group.id=your_group KF Group kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --topic test kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --whitelist \".*\" property kafka-console-consumer.sh --property print.timestamp=true --property print.key=true --bootstrap-server ${BOOTSTRAP_SERVER} --topic __test --from-beginning kafka-console-consumer.sh --property print.timestamp=true --property print.key=true --property group.id=__test --bootstrap-server ${BOOTSTRAP_SERVER} --zookeeper ${ZK_CONNECT} --topic logs --from-beginning \u4ece\u6307\u5b9a partition, offset \u5f00\u59cb\u6d88\u8d39 $ kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --topic logs --offset 3418783 --partition 0 \u5217\u51fa\u6240\u6709 topic \u8be6\u60c5 kafka-topics.sh --list --zookeeper ${ZK_CONNECT} > topics.data while read topic do kafka-topics.sh --describe --zookeeper ${ZK_CONNECT} --topic $topic done < topics.data \u5217\u51fa\u6240\u6709 consumer \u8be6\u60c5 ZK kafka-consumer-groups.sh --zookeeper ${ZK_CONNECT} --list > zk.data while read group do echo ==================== zk group name: $group =============================== kafka-consumer-groups.sh --zookeeper ${ZK_CONNECT} --describe --group $group echo echo done < zk.data KF > 0.9.x.x kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --list > kf.data while read group do echo ==================== kf group name: $group =============================== kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --describe --group $group echo echo done < kf.data KF <= 0.9.x.x kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --list --new-consumer > kf.data while read group do echo ==================== kf group name: $group =============================== kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --new-consumer --describe --group $group echo echo done < kf.data \u91cd\u5206\u533a/\u4fee\u6539\u526f\u672c\u6570 \u83b7\u53d6\u5f53\u524d broker id \u5217\u8868\uff1a $ zookeeper-shell.sh ${ZK_CONNECT} ls /brokers/ids | sed 's/ //g' \u521b\u5efa topics.json \u6587\u4ef6\uff0c\u6587\u4ef6\u5185\u5bb9\u4e3a\u9700\u8981\u91cd\u5206\u533a\u7684 topic\uff0c\u4f8b\u5982\uff1a { \"topics\": [ { \"topic\": \"statistics\" } ], \"version\": 1 } \u6267\u884c kafka-reassign-partitions.sh \uff0c\u6307\u5b9a --generate \u53c2\u6570\u548c\u521a\u624d\u521b\u5efa\u7684 topics.json \u6587\u4ef6\uff0c\u901a\u8fc7 --broker-list \u6307\u5b9a\u5206\u5e03\u7684 broker id\uff0c\u751f\u6210\u63cf\u8ff0 partition \u5206\u5e03\u7684\u5185\u5bb9\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT}:2181 --generate --topics-to-move-json-file topics.json --broker-list 1,2,3 | tee plan Current partition replica assignment {\"version\":1,\"partitions\":[{\"topic\":\"statistics\",\"partition\":0,\"replicas\":[3],\"log_dirs\":[\"any\"]}]} Proposed partition reassignment configuration {\"version\":1,\"partitions\":[{\"topic\":\"statistics\",\"partition\":0,\"replicas\":[1],\"log_dirs\":[\"any\"]}]} \u547d\u4ee4\u4f1a\u7ed9\u51fa\u73b0\u5728\u7684 partition \u5206\u5e03\u548c\u76ee\u7684 partition \u5206\u5e03\uff0c\u5c06\u751f\u6210\u7684\u5185\u5bb9\u5206\u522b\u4fdd\u5b58\u5230 current.json (\u7528\u4e8e\u6062\u590d) reassign.json (\u4e4b\u540e\u7684\u8ba1\u5212) $ sed -n '2p' plan > current.json $ sed -n '5p' plan > reassign.json \u53ef\u4ee5\u8c03\u6574 replicas.json \u7684\u5185\u5bb9\uff0c replicas \u5b57\u6bb5\u7684\u542b\u4e49\u662f\u8be5 partition \u5206\u5e03\u7684 broker id\uff1a 1. \u901a\u8fc7\u589e\u52a0/\u51cf\u5c11 replicas \u4e2d\u7684 broker id \u53ef\u4ee5\u589e\u52a0/\u51cf\u5c11\u526f\u672c\uff08 log_dirs \u5305\u542b\u7684\u9879\u8981\u4e0e replicas \u5305\u542b\u7684\u9879\u6570\u76ee\u4e00\u81f4\uff09 2. \u8c03\u6574 replicas \u5b57\u6bb5\u7684\u7b2c\u4e00\u4e2a broker id \u53ef\u4ee5\u6307\u5b9a\u8fd9\u4e2a partition \u7684\u4f18\u5148 leader { \"partitions\": [ { \"log_dirs\": [ \"any\", \"any\", \"any\" ], \"partition\": 0, \"replicas\": [ 1, 2, 3 ], \"topic\": \"statistics\" } ], \"version\": 1 } \u4f4e\u7248\u672c\u6ca1\u6709 log_dirs \u5b57\u6bb5\uff0c\u53ef\u4ee5\u5ffd\u7565 \u6267\u884c kafka-reassign-partitions.sh \uff0c\u6307\u5b9a --execute \u53c2\u6570\u548c reassign.json \u6587\u4ef6\uff0c\u6267\u884c partition \u91cd\u5206\u5e03\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT} --execute --reassignment-json-file reassign.json \u6267\u884c kafka-reassign-partitions.sh \uff0c\u6307\u5b9a --verify \u53c2\u6570\u548c reassign.json \u6587\u4ef6\uff0c\u786e\u8ba4 partition \u91cd\u5206\u5e03\u8fdb\u5ea6\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT} --verify --reassignment-json-file reassign.json \u5982\u679c topic \u6570\u636e\u91cf\u548c\u6d41\u91cf\u8fc7\u5927\uff0c\u91cd\u5206\u533a\u4f1a\u5bf9\u96c6\u7fa4\u670d\u52a1\u9020\u6210\u6bd4\u8f83\u5927\u7684\u5f71\u54cd\uff0c\u6b64\u65f6\u53ef\u4ee5\u5bf9\u91cd\u5206\u533a\u9650\u5236\u6d41\u91cf\uff0c\u6bd4\u5982\u9650\u5236\u4e0d\u8d85\u8fc7 50MB/s\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT} --execute --reassignment-json-file reassign.json --throttle 50000000 \u53c2\u8003\uff1a - https://kafka.apache.org/documentation/#rep-throttle \u8bfb\u53d6 __consumer_offsets 0.11.0.0\u4e4b\u524d\u7248\u672c $ kafka-console-consumer.sh --formatter \"kafka.coordinator.GroupMetadataManager\\$OffsetsMessageFormatter\" --zookeeper ${ZK_CONNECT} --topic __consumer_offsets 0.11.0.0\u4e4b\u540e\u7248\u672c(\u542b) $ kafka-console-consumer.sh --formatter \"kafka.coordinator.group.GroupMetadataManager\\$OffsetsMessageFormatter\" --bootstrap-server ${BOOTSTRAP_SERVER} --topic __consumer_offsets \u683c\u5f0f\uff1a [Group, Topic, Partition]::[OffsetMetadata[Offset, Metadata], CommitTime, ExpirationTime] \u5206\u533a\u89c4\u5219\uff1a Math.abs(groupID.hashCode()) % numPartitions \u4fee\u6539 topic \u53c2\u6570 \u4fdd\u7559\u5927\u5c0f $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __test --add-config max.message.bytes=4194304 \u4fdd\u7559\u65f6\u95f4 $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __test --add-config retention.ms=259200000 \u4fee\u6539 __consumer_offsets \u4fdd\u7559\u7b56\u7565 $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --describe --entity-type topics --entity-name __consumer_offsets $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --delete-config cleanup.policy $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --add-config retention.ms=2592000000 $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --add-config cleanup.policy=delete $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --delete-config retention.ms $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --add-config cleanup.policy=compact \u67e5\u770b\u65e5\u5fd7/\u7d22\u5f15\u6587\u4ef6 \u67e5\u770b\u65e5\u5fd7\u6587\u4ef6 $ kafka-run-class.sh kafka.tools.DumpLogSegments --files ./00000000000000283198.log --print-data-log \u67e5\u770b\u7d22\u5f15\u6587\u4ef6 $ kafka-run-class.sh kafka.tools.DumpLogSegments --files 0000000000000045.timeindex \u91cd\u65b0\u5e73\u8861 leader $ kafka-preferred-replica-election.sh --zookeeper ${ZK_CONNECT} \u5220\u9664\u6d88\u8d39\u7ec4 KF \u7c7b\u578b $ kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --delete --group console-consumer-97214 ZK \u7c7b\u578b $ kafka-consumer-groups.sh --zookeeper ${ZK_CONNECT} --delete --group console-consumer-38645 \u67e5\u770b\u8bf7\u6c42\u4f7f\u7528\u7684 API Version $ kafka-broker-api-versions.sh --bootstrap-server ${BOOTSTRAP_SERVER} \u67e5\u770b\u526f\u672c\u540c\u6b65 lag kafka-replica-verification.sh --broker-list ${BOOTSTRAP_SERVER} kafka-replica-verification.sh --broker-list ${BOOTSTRAP_SERVER} --topic-white-list .* \u67e5\u770b topic offset \u6700\u7ec8\u7684 offset $ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list ${BOOTSTRAP_SERVER} --time -1 --topic test \u6700\u65e9\u7684 offset $ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list ${BOOTSTRAP_SERVER} --time -2 --topic test \u8bbe\u7f6e consumer current offset $ kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --group $group --reset-offsets --to-datetime 2019-12-12T16:59:59.000 --topic $topic --execute SCRAM \u7528\u6237 kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --add-config 'SCRAM-SHA-256=[password=admin_pass],SCRAM-SHA-512=[password=admin_pass]' --entity-type users --entity-name admin kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --delete-config 'SCRAM-SHA-512' --entity-type users --entity-name admin","title":"1. kafka tips"},{"location":"kafka/2020-04-01-kafka-tips/#kafka","text":"","title":"kafka \u547d\u4ee4\u884c\u64cd\u4f5c"},{"location":"kafka/2020-04-01-kafka-tips/#_1","text":"\u9884\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u65b9\u4fbf\u64cd\u4f5c\uff1a export KAFKA_HOME=/usr/local/kafka export PATH=\"$PATH:${KAFKA_HOME}/bin\" # zk \u8fde\u63a5\u5730\u5740 export ZK_CONNECT=\"$(hostname):2181\" # kafka \u8fde\u63a5\u5730\u5740 export BOOTSTRAP_SERVER=\"$(hostname):9092\" # \u5982\u679c\u6709 jaas \u8ba4\u8bc1 export KAFKA_OPTS=\"-Djava.security.auth.login.config=${KAFKA_HOME}/config/kafka_server_jaas.conf\" export JMX_PORT=9997","title":"\u9884\u8bbe\u73af\u5883\u53d8\u91cf"},{"location":"kafka/2020-04-01-kafka-tips/#_2","text":"\u521b\u5efa topic $ kafka-topics.sh --create --zookeeper ${ZK_CONNECT} --replication-factor 3 --partitions 3 --topic __test \u5220\u9664 topic $ kafka-topics.sh --zookeeper ${ZK_CONNECT} --delete --topic __test \u5217\u51fa topic $ kafka-topics.sh --list --zookeeper ${ZK_CONNECT} \u751f\u4ea7 \u6d88\u606f $ kafka-console-producer.sh --broker-list ${BOOTSTRAP_SERVER} --topic __test \u6d88\u8d39 \u6d88\u606f $ kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --topic __test --from-beginning \u63cf\u8ff0 topic $ kafka-topics.sh --describe --zookeeper ${ZK_CONNECT} --topic test \u4fee\u6539 topic \u5206\u533a\u6570 $ kafka-topics.sh --zookeeper ${ZK_CONNECT} --alter --partitions 5 --topic bar","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"kafka/2020-04-01-kafka-tips/#_3","text":"\u4f7f\u7528 zookeeper \u4fdd\u5b58\u6d88\u8d39\u7ec4\u6570\u636e: --zookeeper localhost:2181 \u4f7f\u7528 __consumer_offsets \u4fdd\u5b58\u6d88\u8d39\u7ec4\u6570\u636e: --bootstrap-server localhost:9092 \u6307\u5b9a topic: --topic foo --whitelist \".*\" \u6307\u5b9a group \u540d: --group group1 --consumer-property group.id=group1 ZK Group kafka-console-consumer.sh --zookeeper ${ZK_CONNECT} --topic test --from-beginning --group test1 kafka-console-consumer.sh --zookeeper ${ZK_CONNECT} --topic logs --consumer-property group.id=your_group KF Group kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --topic test kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --whitelist \".*\" property kafka-console-consumer.sh --property print.timestamp=true --property print.key=true --bootstrap-server ${BOOTSTRAP_SERVER} --topic __test --from-beginning kafka-console-consumer.sh --property print.timestamp=true --property print.key=true --property group.id=__test --bootstrap-server ${BOOTSTRAP_SERVER} --zookeeper ${ZK_CONNECT} --topic logs --from-beginning \u4ece\u6307\u5b9a partition, offset \u5f00\u59cb\u6d88\u8d39 $ kafka-console-consumer.sh --bootstrap-server ${BOOTSTRAP_SERVER} --topic logs --offset 3418783 --partition 0","title":"\u6d88\u8d39\u8005\u9009\u9879"},{"location":"kafka/2020-04-01-kafka-tips/#topic","text":"kafka-topics.sh --list --zookeeper ${ZK_CONNECT} > topics.data while read topic do kafka-topics.sh --describe --zookeeper ${ZK_CONNECT} --topic $topic done < topics.data","title":"\u5217\u51fa\u6240\u6709 topic \u8be6\u60c5"},{"location":"kafka/2020-04-01-kafka-tips/#consumer","text":"ZK kafka-consumer-groups.sh --zookeeper ${ZK_CONNECT} --list > zk.data while read group do echo ==================== zk group name: $group =============================== kafka-consumer-groups.sh --zookeeper ${ZK_CONNECT} --describe --group $group echo echo done < zk.data KF > 0.9.x.x kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --list > kf.data while read group do echo ==================== kf group name: $group =============================== kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --describe --group $group echo echo done < kf.data KF <= 0.9.x.x kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --list --new-consumer > kf.data while read group do echo ==================== kf group name: $group =============================== kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --new-consumer --describe --group $group echo echo done < kf.data","title":"\u5217\u51fa\u6240\u6709 consumer \u8be6\u60c5"},{"location":"kafka/2020-04-01-kafka-tips/#_4","text":"\u83b7\u53d6\u5f53\u524d broker id \u5217\u8868\uff1a $ zookeeper-shell.sh ${ZK_CONNECT} ls /brokers/ids | sed 's/ //g' \u521b\u5efa topics.json \u6587\u4ef6\uff0c\u6587\u4ef6\u5185\u5bb9\u4e3a\u9700\u8981\u91cd\u5206\u533a\u7684 topic\uff0c\u4f8b\u5982\uff1a { \"topics\": [ { \"topic\": \"statistics\" } ], \"version\": 1 } \u6267\u884c kafka-reassign-partitions.sh \uff0c\u6307\u5b9a --generate \u53c2\u6570\u548c\u521a\u624d\u521b\u5efa\u7684 topics.json \u6587\u4ef6\uff0c\u901a\u8fc7 --broker-list \u6307\u5b9a\u5206\u5e03\u7684 broker id\uff0c\u751f\u6210\u63cf\u8ff0 partition \u5206\u5e03\u7684\u5185\u5bb9\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT}:2181 --generate --topics-to-move-json-file topics.json --broker-list 1,2,3 | tee plan Current partition replica assignment {\"version\":1,\"partitions\":[{\"topic\":\"statistics\",\"partition\":0,\"replicas\":[3],\"log_dirs\":[\"any\"]}]} Proposed partition reassignment configuration {\"version\":1,\"partitions\":[{\"topic\":\"statistics\",\"partition\":0,\"replicas\":[1],\"log_dirs\":[\"any\"]}]} \u547d\u4ee4\u4f1a\u7ed9\u51fa\u73b0\u5728\u7684 partition \u5206\u5e03\u548c\u76ee\u7684 partition \u5206\u5e03\uff0c\u5c06\u751f\u6210\u7684\u5185\u5bb9\u5206\u522b\u4fdd\u5b58\u5230 current.json (\u7528\u4e8e\u6062\u590d) reassign.json (\u4e4b\u540e\u7684\u8ba1\u5212) $ sed -n '2p' plan > current.json $ sed -n '5p' plan > reassign.json \u53ef\u4ee5\u8c03\u6574 replicas.json \u7684\u5185\u5bb9\uff0c replicas \u5b57\u6bb5\u7684\u542b\u4e49\u662f\u8be5 partition \u5206\u5e03\u7684 broker id\uff1a 1. \u901a\u8fc7\u589e\u52a0/\u51cf\u5c11 replicas \u4e2d\u7684 broker id \u53ef\u4ee5\u589e\u52a0/\u51cf\u5c11\u526f\u672c\uff08 log_dirs \u5305\u542b\u7684\u9879\u8981\u4e0e replicas \u5305\u542b\u7684\u9879\u6570\u76ee\u4e00\u81f4\uff09 2. \u8c03\u6574 replicas \u5b57\u6bb5\u7684\u7b2c\u4e00\u4e2a broker id \u53ef\u4ee5\u6307\u5b9a\u8fd9\u4e2a partition \u7684\u4f18\u5148 leader { \"partitions\": [ { \"log_dirs\": [ \"any\", \"any\", \"any\" ], \"partition\": 0, \"replicas\": [ 1, 2, 3 ], \"topic\": \"statistics\" } ], \"version\": 1 } \u4f4e\u7248\u672c\u6ca1\u6709 log_dirs \u5b57\u6bb5\uff0c\u53ef\u4ee5\u5ffd\u7565 \u6267\u884c kafka-reassign-partitions.sh \uff0c\u6307\u5b9a --execute \u53c2\u6570\u548c reassign.json \u6587\u4ef6\uff0c\u6267\u884c partition \u91cd\u5206\u5e03\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT} --execute --reassignment-json-file reassign.json \u6267\u884c kafka-reassign-partitions.sh \uff0c\u6307\u5b9a --verify \u53c2\u6570\u548c reassign.json \u6587\u4ef6\uff0c\u786e\u8ba4 partition \u91cd\u5206\u5e03\u8fdb\u5ea6\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT} --verify --reassignment-json-file reassign.json \u5982\u679c topic \u6570\u636e\u91cf\u548c\u6d41\u91cf\u8fc7\u5927\uff0c\u91cd\u5206\u533a\u4f1a\u5bf9\u96c6\u7fa4\u670d\u52a1\u9020\u6210\u6bd4\u8f83\u5927\u7684\u5f71\u54cd\uff0c\u6b64\u65f6\u53ef\u4ee5\u5bf9\u91cd\u5206\u533a\u9650\u5236\u6d41\u91cf\uff0c\u6bd4\u5982\u9650\u5236\u4e0d\u8d85\u8fc7 50MB/s\uff1a $ kafka-reassign-partitions.sh --zookeeper ${ZK_CONNECT} --execute --reassignment-json-file reassign.json --throttle 50000000 \u53c2\u8003\uff1a - https://kafka.apache.org/documentation/#rep-throttle","title":"\u91cd\u5206\u533a/\u4fee\u6539\u526f\u672c\u6570"},{"location":"kafka/2020-04-01-kafka-tips/#__consumer_offsets","text":"0.11.0.0\u4e4b\u524d\u7248\u672c $ kafka-console-consumer.sh --formatter \"kafka.coordinator.GroupMetadataManager\\$OffsetsMessageFormatter\" --zookeeper ${ZK_CONNECT} --topic __consumer_offsets 0.11.0.0\u4e4b\u540e\u7248\u672c(\u542b) $ kafka-console-consumer.sh --formatter \"kafka.coordinator.group.GroupMetadataManager\\$OffsetsMessageFormatter\" --bootstrap-server ${BOOTSTRAP_SERVER} --topic __consumer_offsets \u683c\u5f0f\uff1a [Group, Topic, Partition]::[OffsetMetadata[Offset, Metadata], CommitTime, ExpirationTime] \u5206\u533a\u89c4\u5219\uff1a Math.abs(groupID.hashCode()) % numPartitions","title":"\u8bfb\u53d6 __consumer_offsets"},{"location":"kafka/2020-04-01-kafka-tips/#topic_1","text":"\u4fdd\u7559\u5927\u5c0f $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __test --add-config max.message.bytes=4194304 \u4fdd\u7559\u65f6\u95f4 $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __test --add-config retention.ms=259200000 \u4fee\u6539 __consumer_offsets \u4fdd\u7559\u7b56\u7565 $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --describe --entity-type topics --entity-name __consumer_offsets $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --delete-config cleanup.policy $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --add-config retention.ms=2592000000 $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --add-config cleanup.policy=delete $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --delete-config retention.ms $ kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --entity-type topics --entity-name __consumer_offsets --add-config cleanup.policy=compact","title":"\u4fee\u6539 topic \u53c2\u6570"},{"location":"kafka/2020-04-01-kafka-tips/#_5","text":"\u67e5\u770b\u65e5\u5fd7\u6587\u4ef6 $ kafka-run-class.sh kafka.tools.DumpLogSegments --files ./00000000000000283198.log --print-data-log \u67e5\u770b\u7d22\u5f15\u6587\u4ef6 $ kafka-run-class.sh kafka.tools.DumpLogSegments --files 0000000000000045.timeindex","title":"\u67e5\u770b\u65e5\u5fd7/\u7d22\u5f15\u6587\u4ef6"},{"location":"kafka/2020-04-01-kafka-tips/#leader","text":"$ kafka-preferred-replica-election.sh --zookeeper ${ZK_CONNECT}","title":"\u91cd\u65b0\u5e73\u8861 leader"},{"location":"kafka/2020-04-01-kafka-tips/#_6","text":"KF \u7c7b\u578b $ kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --delete --group console-consumer-97214 ZK \u7c7b\u578b $ kafka-consumer-groups.sh --zookeeper ${ZK_CONNECT} --delete --group console-consumer-38645","title":"\u5220\u9664\u6d88\u8d39\u7ec4"},{"location":"kafka/2020-04-01-kafka-tips/#api-version","text":"$ kafka-broker-api-versions.sh --bootstrap-server ${BOOTSTRAP_SERVER}","title":"\u67e5\u770b\u8bf7\u6c42\u4f7f\u7528\u7684 API Version"},{"location":"kafka/2020-04-01-kafka-tips/#lag","text":"kafka-replica-verification.sh --broker-list ${BOOTSTRAP_SERVER} kafka-replica-verification.sh --broker-list ${BOOTSTRAP_SERVER} --topic-white-list .*","title":"\u67e5\u770b\u526f\u672c\u540c\u6b65 lag"},{"location":"kafka/2020-04-01-kafka-tips/#topic-offset","text":"\u6700\u7ec8\u7684 offset $ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list ${BOOTSTRAP_SERVER} --time -1 --topic test \u6700\u65e9\u7684 offset $ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list ${BOOTSTRAP_SERVER} --time -2 --topic test","title":"\u67e5\u770b topic offset"},{"location":"kafka/2020-04-01-kafka-tips/#consumer-current-offset","text":"$ kafka-consumer-groups.sh --bootstrap-server ${BOOTSTRAP_SERVER} --group $group --reset-offsets --to-datetime 2019-12-12T16:59:59.000 --topic $topic --execute","title":"\u8bbe\u7f6e consumer current offset"},{"location":"kafka/2020-04-01-kafka-tips/#scram","text":"kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --add-config 'SCRAM-SHA-256=[password=admin_pass],SCRAM-SHA-512=[password=admin_pass]' --entity-type users --entity-name admin kafka-configs.sh --zookeeper ${ZK_CONNECT} --alter --delete-config 'SCRAM-SHA-512' --entity-type users --entity-name admin","title":"SCRAM \u7528\u6237"},{"location":"kafka/2020-10-28-kafka-upgrade/","text":"Kafka \u6eda\u52a8\u5347\u7ea7 kafka \u6eda\u52a8\u5347\u7ea7 (0.9.0.X ~ 1.1.1) kafka \u6eda\u52a8\u5347\u7ea7\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \uff0c\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u6eda\u52a8\u91cd\u542f\u8282\u70b9\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u96c6\u7fa4\u670d\u52a1\u4e0d\u4e2d\u65ad\u3002 \u7b2c\u4e00\u6b65 \u9700\u8981\u4f9d\u6b21\u66ff\u6362\u8282\u70b9 kafka \u5230 1.1.1 \u7248\u672c\uff0c\u66ff\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u8282\u70b9\u539f\u6709 kafka \u914d\u7f6e\uff0c\u5e76\u65b0\u589e\u914d\u7f6e\u6307\u5b9a inter.broker.protocol.version=0.9.0.X \uff0c log.message.format.version=0.9.0.X \u4e0e\u73b0\u6709\u96c6\u7fa4\u7248\u672c\u517c\u5bb9\uff0c\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a # \u4e0b\u8f7d 1.1.1 \u7248\u672c kafka wget http://mirrors.ucloud.cn/ucloud/udata/kafka_1.1.1.tar.gz -O /tmp/kafka_1.1.1.tar.gz wget http://mirrors.ucloud.cn/ucloud/udata/kafka_1.1.1.md -O /tmp/kafka_1.1.1.md # \u6821\u9a8c kafka \u5305 cd /tmp [[ `md5sum kafka_1.1.1.tar.gz` == `cat kafka_1.1.1.md` ]] && echo 'ok' || echo 'no' # \u6821\u9a8c\u6210\u529f\u540e\u89e3\u538b kafka \u5305 tar -zxvf /tmp/kafka_1.1.1.tar.gz -C /tmp # \u4fdd\u7559\u539f\u6709\u914d\u7f6e mv /tmp/kafka/config /tmp/kafka/config.back cp -r /usr/local/kafka/config /tmp/kafka/ # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f echo inter.broker.protocol.version=0.9.0.X >> /tmp/kafka/config/server.properties echo log.message.format.version=0.9.0.X >> /tmp/kafka/config/server.properties # \u66ff\u6362 kafka \u5305 mv /usr/local/kafka /usr/local/kafka.back cp -r /tmp/kafka /usr/local/ # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart \u7b2c\u4e8c\u6b65 Kafka \u7248\u672c\u5347\u7ea7\u6709\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u7684\u53d8\u5316\uff0c\u7ecf\u8fc7\u4e0a\u4e00\u6b65\u7684\u66ff\u6362\uff0c\u96c6\u7fa4\u4e0a\u7684 kafka \u5305\u5df2\u7ecf\u66ff\u6362\u6210 1.1.1 \u7248\u672c\uff0c\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u4ecd\u7136\u6307\u5b9a\u4e3a 0.9.0.X \u7248\u672c\uff0c\u4e4b\u540e\u9700\u8981\u5bf9\u8fd9\u4e24\u9879\u914d\u7f6e\u8fdb\u884c\u66f4\u65b0\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u4e24\u70b9\uff1a \u66f4\u6539 log.message.format.version \u4e4b\u524d\uff0c\u6240\u6709\u6d88\u8d39\u8005\u5fc5\u987b\u5347\u7ea7\u5230\u652f\u6301 1.1.1 \u6216\u8005\u4e4b\u540e\u7684\u7248\u672c inter.broker.protocol.version , log.message.format.version \u66f4\u6539\u5e76\u91cd\u542f\u751f\u6548\u4e4b\u540e\uff0ckafka \u7248\u672c\u4e0d\u80fd\u8fdb\u884c\u964d\u7ea7\u56de\u9000 \u64cd\u4f5c\u6b65\u9aa4\uff1a # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f sed -i \"s/inter.broker.protocol.version=0.9.0.X/inter.broker.protocol.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties sed -i \"s/log.message.format.version=0.9.0.X/log.message.format.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart kafka \u6eda\u52a8\u5347\u7ea7 (0.10.2 ~ 2.1.1) kafka \u6eda\u52a8\u5347\u7ea7\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \uff0c\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u4f9d\u6b21\u91cd\u542f\u8282\u70b9\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u96c6\u7fa4\u670d\u52a1\u4e0d\u4e2d\u65ad\u3002 \u7b2c\u4e00\u6b65 \u9700\u8981\u4f9d\u6b21\u66ff\u6362\u8282\u70b9 kafka \u5230 2.1.1 \u7248\u672c\uff0c\u66ff\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u8282\u70b9\u539f\u6709 kafka \u914d\u7f6e\uff0c\u5e76\u65b0\u589e\u914d\u7f6e\u6307\u5b9a inter.broker.protocol.version=0.10.2-IV0 \uff0c log.message.format.version=0.10.2-IV0 \u4e0e\u73b0\u6709\u96c6\u7fa4\u7248\u672c\u517c\u5bb9\uff0c\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a # \u4e0b\u8f7d 2.1.1 \u7248\u672c kafka wget http://mirrors.ucloud.cn/ucloud/udata/ukafka/kafka_2.1.1.tar.gz -O /tmp/kafka_2.1.1.tar.gz wget http://mirrors.ucloud.cn/ucloud/udata/ukafka/kafka_2.1.1.md -O /tmp/kafka_2.1.1.md # \u6821\u9a8c kafka \u5305 cd /tmp [[ `md5sum kafka_2.1.1.tar.gz` == `cat kafka_2.1.1.md` ]] && echo 'ok' || echo 'no' # \u6821\u9a8c\u6210\u529f\u540e\u89e3\u538b kafka \u5305 tar -zxvf /tmp/kafka_2.1.1.tar.gz -C /tmp # \u4fdd\u7559\u539f\u6709\u914d\u7f6e mv /tmp/kafka/config /tmp/kafka/config.back cp -r /usr/local/kafka/config /tmp/kafka/ # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f echo inter.broker.protocol.version=0.10.2-IV0 >> /tmp/kafka/config/server.properties echo log.message.format.version=0.10.2-IV0 >> /tmp/kafka/config/server.properties # \u66ff\u6362 kafka \u5305 mv /usr/local/kafka /usr/local/kafka.back cp -r /tmp/kafka /usr/local/ # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart \u7b2c\u4e8c\u6b65 Kafka \u7248\u672c\u5347\u7ea7\u6709\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u7684\u53d8\u5316\uff0c\u7ecf\u8fc7\u4e0a\u4e00\u6b65\u7684\u66ff\u6362\uff0c\u96c6\u7fa4\u4e0a\u7684 kafka \u5305\u5df2\u7ecf\u66ff\u6362\u6210 2.1.1 \u7248\u672c\uff0c\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u4ecd\u7136\u6307\u5b9a\u4e3a 0.10.2.1 \u7248\u672c\uff0c\u4e4b\u540e\u9700\u8981\u5bf9\u8fd9\u4e24\u9879\u914d\u7f6e\u8fdb\u884c\u66f4\u65b0\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u4e24\u70b9\uff1a \u66f4\u6539 log.message.format.version \u4e4b\u524d\uff0c\u6240\u6709\u6d88\u8d39\u8005\u5fc5\u987b\u5347\u7ea7\u5230\u652f\u6301 2.1.1 \u6216\u8005\u4e4b\u540e\u7684\u7248\u672c inter.broker.protocol.version , log.message.format.version \u66f4\u6539\u5e76\u91cd\u542f\u751f\u6548\u4e4b\u540e\uff0ckafka \u7248\u672c\u4e0d\u80fd\u8fdb\u884c\u964d\u7ea7\u56de\u9000 \u64cd\u4f5c\u6b65\u9aa4\uff1a # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f sed -i \"s/inter.broker.protocol.version=0.10.2-IV0/inter.broker.protocol.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties sed -i \"s/log.message.format.version=0.10.2-IV0/log.message.format.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart \u5176\u4ed6 0.10.0.0 \u4e4b\u540e\u6d88\u606f\u683c\u5f0f\u6539\u53d8\uff0c\u5982\u679c\u5ba2\u6237\u7aef\u7248\u672c\u4f4e\u4e8e 0.10.0.0 \u4f1a\u5e26\u6765\u6027\u80fd\u635f\u5931","title":"3. kafka upgrade"},{"location":"kafka/2020-10-28-kafka-upgrade/#kafka","text":"","title":"Kafka \u6eda\u52a8\u5347\u7ea7"},{"location":"kafka/2020-10-28-kafka-upgrade/#kafka-090x-111","text":"kafka \u6eda\u52a8\u5347\u7ea7\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \uff0c\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u6eda\u52a8\u91cd\u542f\u8282\u70b9\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u96c6\u7fa4\u670d\u52a1\u4e0d\u4e2d\u65ad\u3002","title":"kafka \u6eda\u52a8\u5347\u7ea7 (0.9.0.X ~ 1.1.1)"},{"location":"kafka/2020-10-28-kafka-upgrade/#_1","text":"\u9700\u8981\u4f9d\u6b21\u66ff\u6362\u8282\u70b9 kafka \u5230 1.1.1 \u7248\u672c\uff0c\u66ff\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u8282\u70b9\u539f\u6709 kafka \u914d\u7f6e\uff0c\u5e76\u65b0\u589e\u914d\u7f6e\u6307\u5b9a inter.broker.protocol.version=0.9.0.X \uff0c log.message.format.version=0.9.0.X \u4e0e\u73b0\u6709\u96c6\u7fa4\u7248\u672c\u517c\u5bb9\uff0c\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a # \u4e0b\u8f7d 1.1.1 \u7248\u672c kafka wget http://mirrors.ucloud.cn/ucloud/udata/kafka_1.1.1.tar.gz -O /tmp/kafka_1.1.1.tar.gz wget http://mirrors.ucloud.cn/ucloud/udata/kafka_1.1.1.md -O /tmp/kafka_1.1.1.md # \u6821\u9a8c kafka \u5305 cd /tmp [[ `md5sum kafka_1.1.1.tar.gz` == `cat kafka_1.1.1.md` ]] && echo 'ok' || echo 'no' # \u6821\u9a8c\u6210\u529f\u540e\u89e3\u538b kafka \u5305 tar -zxvf /tmp/kafka_1.1.1.tar.gz -C /tmp # \u4fdd\u7559\u539f\u6709\u914d\u7f6e mv /tmp/kafka/config /tmp/kafka/config.back cp -r /usr/local/kafka/config /tmp/kafka/ # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f echo inter.broker.protocol.version=0.9.0.X >> /tmp/kafka/config/server.properties echo log.message.format.version=0.9.0.X >> /tmp/kafka/config/server.properties # \u66ff\u6362 kafka \u5305 mv /usr/local/kafka /usr/local/kafka.back cp -r /tmp/kafka /usr/local/ # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart","title":"\u7b2c\u4e00\u6b65"},{"location":"kafka/2020-10-28-kafka-upgrade/#_2","text":"Kafka \u7248\u672c\u5347\u7ea7\u6709\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u7684\u53d8\u5316\uff0c\u7ecf\u8fc7\u4e0a\u4e00\u6b65\u7684\u66ff\u6362\uff0c\u96c6\u7fa4\u4e0a\u7684 kafka \u5305\u5df2\u7ecf\u66ff\u6362\u6210 1.1.1 \u7248\u672c\uff0c\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u4ecd\u7136\u6307\u5b9a\u4e3a 0.9.0.X \u7248\u672c\uff0c\u4e4b\u540e\u9700\u8981\u5bf9\u8fd9\u4e24\u9879\u914d\u7f6e\u8fdb\u884c\u66f4\u65b0\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u4e24\u70b9\uff1a \u66f4\u6539 log.message.format.version \u4e4b\u524d\uff0c\u6240\u6709\u6d88\u8d39\u8005\u5fc5\u987b\u5347\u7ea7\u5230\u652f\u6301 1.1.1 \u6216\u8005\u4e4b\u540e\u7684\u7248\u672c inter.broker.protocol.version , log.message.format.version \u66f4\u6539\u5e76\u91cd\u542f\u751f\u6548\u4e4b\u540e\uff0ckafka \u7248\u672c\u4e0d\u80fd\u8fdb\u884c\u964d\u7ea7\u56de\u9000 \u64cd\u4f5c\u6b65\u9aa4\uff1a # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f sed -i \"s/inter.broker.protocol.version=0.9.0.X/inter.broker.protocol.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties sed -i \"s/log.message.format.version=0.9.0.X/log.message.format.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart","title":"\u7b2c\u4e8c\u6b65"},{"location":"kafka/2020-10-28-kafka-upgrade/#kafka-0102-211","text":"kafka \u6eda\u52a8\u5347\u7ea7\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \uff0c\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u4f9d\u6b21\u91cd\u542f\u8282\u70b9\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u96c6\u7fa4\u670d\u52a1\u4e0d\u4e2d\u65ad\u3002","title":"kafka \u6eda\u52a8\u5347\u7ea7 (0.10.2 ~ 2.1.1)"},{"location":"kafka/2020-10-28-kafka-upgrade/#_3","text":"\u9700\u8981\u4f9d\u6b21\u66ff\u6362\u8282\u70b9 kafka \u5230 2.1.1 \u7248\u672c\uff0c\u66ff\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u8282\u70b9\u539f\u6709 kafka \u914d\u7f6e\uff0c\u5e76\u65b0\u589e\u914d\u7f6e\u6307\u5b9a inter.broker.protocol.version=0.10.2-IV0 \uff0c log.message.format.version=0.10.2-IV0 \u4e0e\u73b0\u6709\u96c6\u7fa4\u7248\u672c\u517c\u5bb9\uff0c\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a # \u4e0b\u8f7d 2.1.1 \u7248\u672c kafka wget http://mirrors.ucloud.cn/ucloud/udata/ukafka/kafka_2.1.1.tar.gz -O /tmp/kafka_2.1.1.tar.gz wget http://mirrors.ucloud.cn/ucloud/udata/ukafka/kafka_2.1.1.md -O /tmp/kafka_2.1.1.md # \u6821\u9a8c kafka \u5305 cd /tmp [[ `md5sum kafka_2.1.1.tar.gz` == `cat kafka_2.1.1.md` ]] && echo 'ok' || echo 'no' # \u6821\u9a8c\u6210\u529f\u540e\u89e3\u538b kafka \u5305 tar -zxvf /tmp/kafka_2.1.1.tar.gz -C /tmp # \u4fdd\u7559\u539f\u6709\u914d\u7f6e mv /tmp/kafka/config /tmp/kafka/config.back cp -r /usr/local/kafka/config /tmp/kafka/ # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f echo inter.broker.protocol.version=0.10.2-IV0 >> /tmp/kafka/config/server.properties echo log.message.format.version=0.10.2-IV0 >> /tmp/kafka/config/server.properties # \u66ff\u6362 kafka \u5305 mv /usr/local/kafka /usr/local/kafka.back cp -r /tmp/kafka /usr/local/ # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart","title":"\u7b2c\u4e00\u6b65"},{"location":"kafka/2020-10-28-kafka-upgrade/#_4","text":"Kafka \u7248\u672c\u5347\u7ea7\u6709\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u7684\u53d8\u5316\uff0c\u7ecf\u8fc7\u4e0a\u4e00\u6b65\u7684\u66ff\u6362\uff0c\u96c6\u7fa4\u4e0a\u7684 kafka \u5305\u5df2\u7ecf\u66ff\u6362\u6210 2.1.1 \u7248\u672c\uff0c\u901a\u4fe1\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u4ecd\u7136\u6307\u5b9a\u4e3a 0.10.2.1 \u7248\u672c\uff0c\u4e4b\u540e\u9700\u8981\u5bf9\u8fd9\u4e24\u9879\u914d\u7f6e\u8fdb\u884c\u66f4\u65b0\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u4e24\u70b9\uff1a \u66f4\u6539 log.message.format.version \u4e4b\u524d\uff0c\u6240\u6709\u6d88\u8d39\u8005\u5fc5\u987b\u5347\u7ea7\u5230\u652f\u6301 2.1.1 \u6216\u8005\u4e4b\u540e\u7684\u7248\u672c inter.broker.protocol.version , log.message.format.version \u66f4\u6539\u5e76\u91cd\u542f\u751f\u6548\u4e4b\u540e\uff0ckafka \u7248\u672c\u4e0d\u80fd\u8fdb\u884c\u964d\u7ea7\u56de\u9000 \u64cd\u4f5c\u6b65\u9aa4\uff1a # \u6307\u5b9a\u901a\u4fe1\u534f\u8bae\u4e0e\u6d88\u606f\u683c\u5f0f sed -i \"s/inter.broker.protocol.version=0.10.2-IV0/inter.broker.protocol.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties sed -i \"s/log.message.format.version=0.10.2-IV0/log.message.format.version=1.1-IV0/g\" /usr/local/kafka/config/server.properties # \u91cd\u542f kafka \u8282\u70b9 service kafka-server restart","title":"\u7b2c\u4e8c\u6b65"},{"location":"kafka/2020-10-28-kafka-upgrade/#_5","text":"0.10.0.0 \u4e4b\u540e\u6d88\u606f\u683c\u5f0f\u6539\u53d8\uff0c\u5982\u679c\u5ba2\u6237\u7aef\u7248\u672c\u4f4e\u4e8e 0.10.0.0 \u4f1a\u5e26\u6765\u6027\u80fd\u635f\u5931","title":"\u5176\u4ed6"}]}